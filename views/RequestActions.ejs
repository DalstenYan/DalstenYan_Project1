<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Me!</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://getbootstrap.com/docs/5.2/assets/css/docs.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <link rel="stylesheet" href = "style.css">
    
        <!--Fonts-->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@100..900&family=Open+Sans:wght@300..800&display=swap" rel="stylesheet">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
        <script>
          $(document).ready(function() {
              $("#nav-placeholder").load("navbar.html")
          })
        </script>
         <script src="/requestformValidation.js" defer></script>
</head>
<header>
    <div id="nav-placeholder"></div>

</header>
<body data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-root-margin="0px 0px -40%" data-bs-smooth-scroll="true" style="overflow: visible; height: fit-content;">

    <nav id="navbar-example2" class="navbar fixed-top bg-dark px-3 mb-3">
        <a class="navbar-brand" href="#">Navigation</a>
        <ul class="nav nav-pills">
          <li class="nav-item">
            <a class="nav-link" href="#scrollspyHeading1">Make Request</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#scrollspyHeading2">See Requests</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#scrollspyHeading3">Modify Requests</a>
          </li>
        </ul>
    </nav>

    <div>
      <h2 id="scrollspyHeading1">Make a Request</h2>
      <div class="requestform">
        <form action="/RequestActions" method="post" id="requestform" novalidate>
          <h1 id="requesttitle">Request Form</h1>
          <div class="mb-3">
            <label for="username" class="form-label">Your Full Name</label>
            <input required name="username" type="text" class="form-control" id="username" placeholder="Johnny Appleseed">      
          </div>
          <div class="mb-3">
            <label for="reqtype" class="form-label">Request Type</label>
            <select required name="reqtype" class="form-select" aria-label="Default select example" id="reqtype">
              <option value="">Choose an option</option>
              <option value="Front-End Job">Front-End</option>
              <option value="Back-End Job">Back-End</option>
              <option value="Full Stack">Full Stack</option>
              <option value="Video Game Job">Video Game</option>
            </select>     
          </div>
          <div class="mb-3">
            <label required for="userdesc" class="form-label">Request Description</label>
            <textarea name="userdesc" class="form-control" id="userdesc" rows="4"></textarea>
          </div>
          <div style="text-align: center;">
            <input type="submit"  class="btn btn-lg submitbutton" value="Submit Request!">
          </div>
        </form>
      </div>

      <!--modal stuff-->
      <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="errorModalLabel">Error</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="errorMessages">
              <!-- Error messages will go here -->
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
      
      <h2 id="scrollspyHeading2">All Submitted Requests</h2>    
      <p>Want me to help you write some software or develop an application for you?</p>
      <p>You're in luck, just let me know the job type and I can get it done!</p>
      <div style="margin: 10px;">
        <h3>Search for an entry:</h3>
        <form class="form-floating" id="searchbarform">
          <input type="text" class="form-control" id="requestSearchBar" placeholder="Front-End Job" value="">
          <label for="requestSearchBar">Enter Name, ID, Request Type</label>
        </form>
      </div>
    <table class="table table-dark table-striped table-hover requests-table" id="requests-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Date Requested</th>
                <th>Request Type</th>
                <th>Status</th>
                <th>Description</th>
            </tr>
        </thead>
        <!--onclick="getRequestData(<%= request.ID %>)" -->
        <tbody>
            <% request.forEach(request => { %>
                <tr style="cursor: pointer;" data-id="<%= request.ID %>">
                    <td><%= request.ID %></td>
                    <td><%= request.Name %></td>
                    <td><%= request.Request_Date.toLocaleDateString('en-US') %></td>
                    <td><%= request.Request_Type %></td>
                    <td><%= request.Request_Status %></td>
                    <td><%= request.Description %></td>
                </tr>
            <% }); %>
        </tbody>
    </table>
      <h4 id="scrollspyHeading3">Update or Delete a Request</h4>
      <p>Click on an existing row in the table to automatically fill out the fields</p>
      <form action="/justupdate" method="post" class="row gy-2 gx-3" id="actionForm">
          <div class="col-auto">
            <div class="input-group">
              <span class="input-group-text">@</span>
              <div class="form-floating">
                <input type="number" class="form-control" id="actionRequestId" placeholder="1111111" required>
                <label for="actionRequestId">ID</label>
              </div>
            </div>
          </div>
          
          <div class="col-auto">
            <label for="actionType">Request Type</label>
            <select class="form-select" id="actionType" required>
              <option value="">Choose an option</option>
              <option value="Front-End Job">Front-End</option>
              <option value="Back-End Job">Back-End</option>
              <option value="Full Stack">Full Stack</option>
              <option value="Video Game Job">Video Game</option>
            </select>
          </div>

          <div class="col-auto">
            <div class="input-group" style="width: 65vw">
              <span class="input-group-text">(New) Description</span>
              <textarea class="form-control" aria-label="With textarea" id="actionDescription" placeholder="Description" required></textarea>
            </div>
          </div>
          <button class="btn btn-info" id="updateButton" value="Update Request" onclick="updateRequest()">Update</button>
      </form>
      <div class="row">
        <button class="btn btn-danger" style="margin-top: 5px;" id="deleteButton" onclick="deleteRequest()">Delete</button>
      </div>
      

      <h4 id="scrollspyHeading5">Delete Request</h4>
      <p>No longer need a job done?</p>
      <p>You can delete your requests here</p>
      <p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p><p>Content for the fifth section...</p>
      <p>Content for the fifth section...</p>

    </div>  
    <!--Function Scripts-->
    <script>
      const tableBody = document.querySelector('#requests-table tbody');

      tableBody.addEventListener('click', function(event) {

          const row = event.target.closest('tr');
          if (row && row.dataset.id) {
              const requestId = row.dataset.id;
              getRequestData(requestId); 
          }
      });


      //to get data for modification
      function getRequestData(id) {

        fetch(`/getRequestData/${id}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('actionRequestId').disabled = true;

                    // put stuff inside the form with the fetched data
                    document.getElementById('actionDescription').value = data.Description;
                    console.log(data.Request_Type)
                    document.getElementById('actionType').value = (data.Request_Type).toString();
                    document.getElementById('actionRequestId').value = data.ID;

                    document.getElementById('scrollspyHeading3').scrollIntoView({ behavior: 'smooth' });
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        }

        function deleteRequest() {
            const userid = document.getElementById('actionRequestId').value;
            //console.log(userid)
            fetch(`/deleteRequest/${userid}`, {
                method: 'DELETE',
            })
            .then(response => {
              //console.log("the response: " + response.json())
              if (!response.ok) {
                  throw new Error(`HTTP error! status: ${response.status}`);
              }
                //return response.json();

            })
            .then(data => {
              console.log("attempting delete")
              location.reload();
              document.getElementById('actionForm').reset(); 
            })
        }

        function updateRequest(){
          event.preventDefault()
          const requestData = {
              id: document.getElementById('actionRequestId').value,
              description: document.getElementById('actionDescription').value,
              requestType: document.getElementById('actionType').value
          };

          console.log(requestData);

          fetch(`/justupdate`, {
              method: 'POST',
              headers: {
                'content-Type': 'application/json; charset=UTF-8',
              },
              body: JSON.stringify(requestData)
          })
          .then(response => {
            console.log(response)
            return response;
          })
          .then(data => {
              console.log("Request updated successfully:", data);
              location.reload();
              document.getElementById('actionForm').reset();
          })

        }
      
    </script>
    <!--Other Scripts-->
    <script>
      const searchForm = document.getElementById('searchbarform')
      const searchInput = document.getElementById('requestSearchBar');
      const table = document.getElementById('requests-table');

      searchInput.addEventListener('input', function() {
          const searchTerm = searchInput.value;


          fetch(`/search?searchTerm=${encodeURIComponent(searchTerm)}`)
              .then(response => response.json())
              .then(data => {

                  const tbody = table.querySelector('tbody');
                  tbody.innerHTML = '';


                  data.forEach(request => {
                      const row = document.createElement('tr');
                      row.dataset.id = request.ID;  
                      row.style.cursor = 'pointer'; 
                      row.innerHTML = `
                            <td>${request.ID}</td>
                            <td>${request.Name}</td>
                            <td>${new Date(request.Request_Date).toLocaleDateString('en-US')}</td>
                            <td>${request.Request_Type}</td>
                            <td>${request.Request_Status}</td>
                            <td>${request.Description}</td>
                        `;
                      tbody.appendChild(row);
                  });
              })
              .catch(err => console.error('Error fetching filtered data:', err));
      });
      searchForm.addEventListener('submit', function(event) {
        event.preventDefault();
        
        const searchTerm = searchInput.value;
        

        fetch(`/search?searchTerm=${encodeURIComponent(searchTerm)}`)
            .then(response => response.json())
            .then(data => {
                updateTable(data);
            })
            .catch(err => console.error('Error fetching filtered data:', err));
});
  </script>


</body>
</html>